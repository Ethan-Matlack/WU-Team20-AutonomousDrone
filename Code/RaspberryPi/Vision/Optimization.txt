def contour_compare(contour_list_a, contour_list_b, search_radius):
    A = np.array(contour_list_a)
    B = np.array(contour_list_b)
    A_x = A[:, :, 0]
    A_y = A[:, :, 1]
    B_x = B[:, :, 0]
    B_y = B[:, :, 1]
    mask = np.abs(A_x[:, :, np.newaxis] - B_x[np.newaxis, :, :]) < search_radius
    mask &= np.abs(A_y[:, :, np.newaxis] - B_y[np.newaxis, :, :]) < search_radius
    common_points = np.where(mask)
    avg_x = np.round((A_x[common_points] + B_x[common_points]) / 2).astype(int)
    avg_y = np.round((A_y[common_points] + B_y[common_points]) / 2).astype(int)
    contour_list_common = list(zip(avg_x, avg_y))
    return contour_list_common
